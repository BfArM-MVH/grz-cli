name: Docker

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: "build image"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export
        uses: docker/build-push-action@v6
        with:
          file: Dockerfile
          tags: grz-cli:latest
          cache-from: type=gha,scope=grz-cli
          cache-to: type=gha,mode=min,scope=grz-cli
          outputs: type=docker,dest=/tmp/grz-cli.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: grz-cli
          path: /tmp/grz-cli.tar

  test:
    name: "test image"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: grz-cli
          path: /tmp

      - name: Load images
        run: |
          docker load --input /tmp/grz-cli.tar
          docker image ls -a
      - name: Test command line
        run: docker run grz-cli:latest grz-cli --help

  publish:
    name: "publish image"
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: grz-cli
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/grz-cli.tar
          docker image ls -a
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
