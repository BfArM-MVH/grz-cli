[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "grz-cli"
version = "0.1.0"
description = "A tool to encrypt and upload files to S3 with MD5 checksum logging."
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Koray Kirli", email = "koraykirli@gmail.com" },
    { name = "Mathias Lesche", email = "mathias.lesche@tu-dresden.de" },
    { name = "Florian R. HÃ¶lzlwimmer", email = "git.ich@frhoelzlwimmer.de" },
]
dependencies = [
    "typing-extensions",
    "boto3",
    "click",
    "crypt4gh",
    "jsonschema",
    "pyyaml",
    "tqdm"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent"
]
requires-python = ">=3.10"
keywords = ["encryption", "S3", "checksum", "upload"]

[project.urls]
"Homepage" = "https://github.com/ghga-de/grz_upload"

[project.scripts]
grz-cli = "grz_cli.cli:cli"

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-mock",
    "pytest-cov",
    "pytest-sugar",
    "moto[s3]",
    "ruff",
    "numpy"
]

[dependency-groups]
test = [
    "pytest",
    "pytest-mock",
    "pytest-cov",
    "pytest-sugar",
    "moto[s3]",
    "numpy"
]
lint = [
    "ruff",
    "mypy"
]

[tool.ruff]
exclude = [
    ".git",
    ".devcontainer",
    "__pycache__",
    "build",
    "dist",
]
line-length = 88
src = [
    "src",
    "tests"
]
target-version = "py310"

[tool.ruff.lint]
fixable = [
    "UP",
    "I",
    "D",
]
ignore = [
    "E111",
    "E114",
    "E116",
    "PLW",
    "RUF001",
    "RUF010",
    "RUF012",
    "N818",
    "B008",
    "PLR2004",
    "D200",
    "D205",
    "D400",
    "D401",
    "D107",
    "D206",
    "D300",
    "UP040",
]
select = [
    "C90",
    "F",
    "I",
    "S",
    "B",
    "N",
    "UP",
    "PL",
    "RUF",
    "SIM",
    "D",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S",
    "SIM",
    "PLR",
    "B011",
    "D103"
]
"__init__.py" = [
    "D",
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.tox]
requires = ["tox>=4.23"]
env_list = ["format-check", "lints", "3.10", "3.11", "3.12"]
allowlist_externals = ["pytest", "ruff"]
isolated_build = true

[tool.tox.env_run_base]
description = "run unit tests"
dependency_groups = ["test"]
commands = [["pytest", { replace = "posargs", default = ["tests"], extend = true }]]

[tool.tox.env."format-check"]
skip_install = true
dependency_groups = ["lint"]
commands = [["ruff", "format", "--check"]]

[tool.tox.env."lints"]
skip_install = true
dependency_groups = ["lint"]
commands = [["ruff", "check"]]
